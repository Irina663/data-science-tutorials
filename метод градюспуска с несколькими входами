def w_sum(a,b): ##чистая сеть. с несколькими выходами
    assert(len(a) == len(b))
    output = 0
    for i in range(len(a)):
        output += (a[i]*b[i])
        return output
weights = [0.1, 0.2, -.1]
def neural_network(input, weights):
    pred = w_sum(input, weights)
    return pred
toes = [8.5, 9.5, 9.9, 9.0]
wlrec = [0.65, 0.8, 0.8, 0.9]
nfans = [1.2, 1.3, 0.5, 1.0]
win_or_lose_binary = [1, 1, 0, 1]
true = win_or_lose_binary [0]
input = [toes[0],wlrec[0],nfans[0]]
pred = neural_network(input,weights)##0.86
error = (pred-true)**2##.020
delta = pred - true##-.14
def ele_mul(number,vector):
    output = [0,0,0]
    assert(len(output)==len(vector))
    for i in range(len(vector)):
        output[i] = number*vector[i]
    return output
weight_deltas = ele_mul(delta, input)
alpha = 0.01
for i in range(len(weights)):
    weights[i] -= alpha*weight_deltas[i]
print("weights:" + str(weights))
print("weight Deltas: " + str(weight_deltas))
